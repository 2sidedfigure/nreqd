#!/bin/sh

VERSION=0.0.1

ONLY_RELATIVE=
ONLY_NON_RELATIVE=

GREP=$(which -a grep | tail -1 | awk '{ print $1 }')

usage()
{
cat << EOF

    Usage: $0 options [path...]

    Find the required CommonJS modules in the given path(s) (defaulting to the current directory).

    OPTIONS:

      -h    Show this message
      -V    Show version
      -l    Show only relatively referenced modules
      -L    Show only global or search-path referenced modules

EOF
}

while getopts "hVlL" OPTION
do
    case $OPTION in
        h)
            usage
            exit 1
            ;;
        V)
            echo "version $VERSION"
            exit 1
            ;;
        l)
            ONLY_RELATIVE=1
            shift
            ;;
        L)
            ONLY_NON_RELATIVE=1
            shift
            ;;
        ?)
            usage
            exit 2
            ;;
    esac
done

GREP_PATH=${1:-./}

BEGIN_AWK='BEGIN { FS=":" }'
RELATIVE_AWK_MATCH='$2 ~ /^\./ { cmd="fp=$(dirname "$1")/"$2"; echo $(cd \"$(dirname $fp)\"; pwd)/$(basename $fp)"; system(cmd) }'
NON_RELATIVE_AWK_MATCH='$2 ~ /^[^.]/ { print $2 }'

RESULTS=$($GREP -rHoiI "require(['\"][^'\"]\+['\"])" $GREP_PATH | sed -e s/require\([\'\"]// -e s/[\'\"]\)//)

if [ $ONLY_RELATIVE ]
then
    RESULTS=$(echo "$RESULTS" | awk "$BEGIN_AWK $RELATIVE_AWK_MATCH")
elif [ $ONLY_NON_RELATIVE ]
then
    RESULTS=$(echo "$RESULTS" | awk "$BEGIN_AWK $NON_RELATIVE_AWK_MATCH")
else
    RESULTS=$(echo "$RESULTS" | awk "$BEGIN_AWK $RELATIVE_AWK_MATCH $NON_RELATIVE_AWK_MATCH")
fi

echo "$RESULTS" \
    | sort \
    | uniq
